institution:
  class: sfDoctrineRouteCollection
  options:
    model:                Institution
    module:               institution
    prefix_path:          /institution
    column:               id
    with_wildcard_routes: true

news_item:
  class: sfDoctrineRouteCollection
  options:
    model:                NewsItem
    module:               news_item
    prefix_path:          /news/item
    column:               id
    with_wildcard_routes: true

discussion_type:
  class: sfDoctrineRouteCollection
  options:
    model:                DiscussionType
    module:               discussion_type
    prefix_path:          /discussion/type
    column:               id
    with_wildcard_routes: true

profile_permission:
  class: sfDoctrineRouteCollection
  options:
    model:                ProfilePermission
    module:               profile_permission
    prefix_path:          /profile/permission
    column:               id
    with_wildcard_routes: true

profile_group:
  class: sfDoctrineRouteCollection
  options:
    model:                ProfileGroup
    module:               profile_group
    prefix_path:          /profile/group
    column:               id
    with_wildcard_routes: true

payment_scheme:
  class: sfDoctrineRouteCollection
  options:
    model:                PaymentScheme
    module:               payment_scheme
    prefix_path:          /payment/scheme
    column:               ida
    with_wildcard_routes: true

payment:
  class: sfDoctrineRouteCollection
  options:
    model:                Payment
    module:               payment
    prefix_path:          /payment
    column:               id
    with_wildcard_routes: true

faq:
  class: sfDoctrineRouteCollection
  options:
    model:                Faq
    module:               faq
    prefix_path:          /faq
    column:               id
    with_wildcard_routes: true

instructor_enroll:
  class: sfDoctrineRouteCollection
  options:
    model:                Profile
    module:               instructor_enroll
    prefix_path:          /instructor/enroll
    column:               id
    with_wildcard_routes: true

student_enroll:
  class: sfDoctrineRouteCollection
  options:
    model:                Profile
    module:               student_enroll
    prefix_path:          /student/enroll
    column:               id
    with_wildcard_routes: true

assessment_type:
  class: sfDoctrineRouteCollection
  options:
    model:                AssessmentType
    module:               assessment_type
    prefix_path:          /assessment/type
    column:               id
    with_wildcard_routes: true

profile_book:
  class: sfDoctrineRouteCollection
  options:
    model:                ProfileBook
    module:               profile_book
    prefix_path:          /profile/book
    column:               id
    with_wildcard_routes: true

profile_publication:
  class: sfDoctrineRouteCollection
  options:
    model:                ProfilePublication
    module:               profile_publication
    prefix_path:          /profile/publication
    column:               id
    with_wildcard_routes: true
    
profile_interest:
  class: sfDoctrineRouteCollection
  options:
    model:                ProfileInterest
    module:               profile_interest
    prefix_path:          /profile/interest
    column:               id
    with_wildcard_routes: true

profile_profile:
  class: sfDoctrineRouteCollection
  options:
    model:                Profile
    module:               profile
    prefix_path:          /profile
    column:               id
    with_wildcard_routes: true

peer:
  class: sfDoctrineRouteCollection
  options:
    model:                Peer
    module:               peer
    prefix_path:          /peer
    column:               id
    with_wildcard_routes: true

staff_contact:
  class: sfDoctrineRouteCollection
  options:
    model:                StaffContact
    module:               staff_contact
    prefix_path:          /staff/contact
    column:               id
    with_wildcard_routes: true

instructor_contact:
  class: sfDoctrineRouteCollection
  options:
    model:                InstructorContact
    module:               instructor_contact
    prefix_path:          /instructor/contact
    column:               id
    with_wildcard_routes: true
    
student_contact:
  class: sfDoctrineRouteCollection
  options:
    model:                StudentContact
    module:               student_contact
    prefix_path:          /student_contact
    column:               id
    with_wildcard_routes: true

student_academic_settings:
  class: sfDoctrineRouteCollection
  options:
    model:                Profile
    module:               student_academic_settings
    prefix_path:          /student_academic_settings
    column:               id
    with_wildcard_routes: true

instructor_academic_settings:
  class: sfDoctrineRouteCollection
  options:
    model:                Profile
    module:               instructor_academic_settings
    prefix_path:          /instructor/academic/settings
    column:               id
    with_wildcard_routes: true

staff:
  class: sfDoctrineRouteCollection
  options:
    model:                Staff
    module:               staff
    prefix_path:          /staff
    column:               id
    with_wildcard_routes: true

activity_template:
  class: sfDoctrineRouteCollection
  options:
    model:                ActivityTemplate
    module:               activity_template
    prefix_path:          /activity/template
    column:               id
    with_wildcard_routes: true

activity_feed:
  class: sfDoctrineRouteCollection
  options:
    model:                ActivityFeed
    module:               activity_feed
    prefix_path:          /activity/feed
    column:               id
    with_wildcard_routes: true

course_discussion:
  class: sfDoctrineRouteCollection
  options:
    model:                Discussion
    module:               course_discussion
    prefix_path:          /course/discussion
    column:               id
    with_wildcard_routes: true

assignment_submission:
  class: sfDoctrineRouteCollection
  options:
    model:                AssignmentSubmission
    module:               assignment_submission
    prefix_path:          /assignment/submission
    column:               id
    with_wildcard_routes: true

course_announcement:
  class: sfDoctrineRouteCollection
  options:
    model:                Announcement
    module:               course_announcement
    prefix_path:          /course/announcement
    column:               id
    with_wildcard_routes: true

discussion_post:
  class: sfDoctrineRouteCollection
  options:
    model:                DiscussionPost
    module:               discussion_post
    prefix_path:          /discussion/topic/message
    column:               id
    with_wildcard_routes: true

profile_award:
  class: sfDoctrineRouteCollection
  options:
    model:                ProfileAward
    module:               profile_award
    prefix_path:          /profile/award
    column:               id
    with_wildcard_routes: true

profile_qualification:
  class: sfDoctrineRouteCollection
  options:
    model:                ProfileQualification
    module:               profile_qualification
    prefix_path:          /profile/qualification
    column:               id
    with_wildcard_routes: true

email_message_draft:
  class: sfDoctrineRouteCollection
  options:
    model:                EmailMessage
    module:               message_draft
    prefix_path:          /message/draft
    column:               id
    with_wildcard_routes: true

notification_settings:
  class: sfDoctrineRouteCollection
  options:
    model:                NotificationSettings
    module:               notification_settings
    prefix_path:          /notification/settings
    column:               id
    with_wildcard_routes: true

attendance:
  class: sfDoctrineRouteCollection
  options:
    model:                Attendance
    module:               attendance
    prefix_path:          /attendance
    column:               id
    with_wildcard_routes: true

gradebook_scale:
  class: sfDoctrineRouteCollection
  options:
    model:                GradebookScale
    module:               gradebook_scale
    prefix_path:          /gradeboo/scale
    column:               id
    with_wildcard_routes: true

gradebook_grade:
  class: sfDoctrineRouteCollection
  options:
  options:
    model:                GradebookGrade
    module:               gradebook_grade
    prefix_path:          /gradebook/grade
    column:               id
    with_wildcard_routes: true

gradebook_item:
  class: sfDoctrineRouteCollection
  options:
    model:                GradebookItem
    module:               gradebook_item
    prefix_path:          /gradebook/item
    column:               id
    with_wildcard_routes: true

gradebook:
  class: sfDoctrineRouteCollection
  options:
    model:                Gradebook
    module:               gradebook
    prefix_path:          /gradebook
    column:               id
    with_wildcard_routes: true

course_reading_item:
  class: sfDoctrineRouteCollection
  options:
    model:                CourseReadingItem
    module:               course_reading_item
    prefix_path:          /course/reading/item
    column:               id
    with_wildcard_routes: true

file:
  class: sfDoctrineRouteCollection
  options:
    model:                File
    module:               file
    prefix_path:          /file
    column:               id
    with_wildcard_routes: true

discussion_comment:
  class: sfDoctrineRouteCollection
  options:
    model:                DiscussionComment
    module:               discussion_comment
    prefix_path:          /discussion_comment
    column:               id
    with_wildcard_routes: true

folder:
  class: sfDoctrineRouteCollection
  options:
    model:                Folder
    module:               folder
    prefix_path:          /folder
    column:               id
    with_wildcard_routes: true

announcement:
  class: sfDoctrineRouteCollection
  options:
    model:                Announcement
    module:               announcement
    prefix_path:          /announcement
    column:               id
    with_wildcard_routes: true

contact_instructor:
  class: sfDoctrineRouteCollection
  options:
    model:                ContactInstructor
    module:               contact_instructor
    prefix_path:          /contact/instructor
    column:               id
    with_wildcard_routes: true

instructor:
  class: sfDoctrineRouteCollection
  options:
    model:                Profile
    module:               instructor
    prefix_path:          /instructor
    column:               id
    with_wildcard_routes: true
    
student_contact_inline_new:
  url:     /student/contact/inline/new/:fieldset
  param:   { module: student_contact, action: inlineNew }
  
student_contact_inline_edit:
  url:     /student/contact/inline/edit/:fieldset
  param:   { module: student_contact, action: inlineEdit }
  
student_contact_inline_create:
  url:     /student/contact/inline/create
  param:   { module: student_contact, action: inlineUpdate }
  requirements: { sf_method: put } 
  
student_contact_inline_update:
  url:     /student/contact/inline/update
  param:   { module: student_contact, action: inlineUpdate }
  requirements: { sf_method: put } 

enrollment:
  class: sfDoctrineRouteCollection
  options:
    model:                Enrollment
    module:               enrollment
    prefix_path:          /enrollment
    column:               id
    with_wildcard_routes: true

contact:
  class: sfDoctrineRouteCollection
  options:
    model:                Contact
    module:               contact
    prefix_path:          /contact
    column:               id
    with_wildcard_routes: true

message_trash:
  class: sfDoctrineRouteCollection
  options:
    model:                EmailMessage
    module:               message_trash
    prefix_path:          /message/trash
    column:               id
    with_wildcard_routes: true

message_draft:
  class: sfDoctrineRouteCollection
  options:
    model:                EmailMessage
    module:               message_draft
    prefix_path:          /message/draft
    column:               id
    with_wildcard_routes: true

message_sent:
  class: sfDoctrineRouteCollection
  options:
    model:                EmailMessage
    module:               message_sent
    prefix_path:          /message/sent
    column:               id
    with_wildcard_routes: true

message_inbox:
  class: sfDoctrineRouteCollection
  options:
    model:                EmailMessage
    module:               message_inbox
    prefix_path:          /message/inbox
    column:               id
    with_wildcard_routes: true

email_message:
  class: sfDoctrineRouteCollection
  options:
    model:                EmailMessage
    module:               message
    prefix_path:          /email/message
    column:               id
    with_wildcard_routes: true

discussion_member:
  class: sfDoctrineRouteCollection
  options:
    model:                DiscussionPeer
    module:               discussion_member
    prefix_path:          /discussion/peer
    column:               id
    with_wildcard_routes: true
  
discussion_members:
  url:   /discussion/peers
  param: { module: discussion, action: members }
  
discussion_member_invite:
  url:   /discussion/peer/invite
  param: { module: discussion_member, action: invite }
  
discussion_member_followers:
  url:   /discussion/peer/followers
  param: { module: discussion_member, action: followers }
  
discussion_member_accept:
  url:   /discussion/peer/accept/:profile_id
  param: { module: discussion_member, action: accept }
  
discussion_member_suggested:
  url:   /discussion/peer/suggested
  param: { module: discussion_member, action: suggested }
  
discussion_post_show:
  url:   /discussion/topic/message/show
  param: { module: discussion_post, action: show }

discussion_reply:
  class: sfDoctrineRouteCollection
  options:
    model:                DiscussionReply
    module:               discussion_reply
    prefix_path:          /discussion/reply
    column:               id
    with_wildcard_routes: true

discussion_topic:
  class: sfDoctrineRouteCollection
  options:
    model:                DiscussionTopic
    module:               discussion_topic
    prefix_path:          /discussion/topic
    column:               id
    with_wildcard_routes: true

discussion:
  class: sfDoctrineRouteCollection
  options:
    model:                Discussion
    module:               discussion
    prefix_path:          /discussion
    column:               id
    with_wildcard_routes: true

course_link:
  class: sfDoctrineRouteCollection
  options:
    model:                CourseLink
    module:               course_link
    prefix_path:          /course/link
    column:               id
    with_wildcard_routes: true

application:
  class: sfDoctrineRouteCollection
  options:
    model:                Application
    module:               application
    prefix_path:          /application
    column:               id
    with_wildcard_routes: true

mailing_list:
  class: sfDoctrineRouteCollection
  options:
    model:                MailingList
    module:               mailing_list
    prefix_path:          /mailing/list
    column:               id
    with_wildcard_routes: true

faculty:
  class: sfDoctrineRouteCollection
  options:
    model:                Faculty
    module:               faculty
    prefix_path:          /faculty
    column:               id
    with_wildcard_routes: true

calendar_event_attendee:
  class: sfDoctrineRouteCollection
  options:
    model:                CalendarEventAttendee
    module:               calendar_event_attendee
    prefix_path:          /calendar/event/attendee
    column:               id
    with_wildcard_routes: true

calendar_event:
  class: sfDoctrineRouteCollection
  options:
    model:                CalendarEvent
    module:               calendar_event
    prefix_path:          /calendar/event
    column:               id
    with_wildcard_routes: true
    
calendar_event_show:
  url:     /calendar/event/:slug
  class:   sfDoctrineRoute
  options: { model: CalendarEvent, type: object }
  param:   { module: calendar_event, action: show }
  requirements:
    sf_method: [get]

calendar:
  class: sfDoctrineRouteCollection
  options:
    model:                Calendar
    module:               calendar
    prefix_path:          /calendar
    column:               id
    with_wildcard_routes: true
    
course_meeting_time:
  class: sfDoctrineRouteCollection
  options:
    model:                CourseMeetingTime
    module:               course_meeting_time
    prefix_path:          /course/meeting/time
    column:               id
    with_wildcard_routes: true

room:
  class: sfDoctrineRouteCollection
  options:
    model:                Room
    module:               room
    prefix_path:          /room
    column:               id
    with_wildcard_routes: true

building:
  class: sfDoctrineRouteCollection
  options:
    model:                Building
    module:               building
    prefix_path:          /building
    column:               id
    with_wildcard_routes: true

course:
  class: sfDoctrineRouteCollection
  options:
    model:                Course
    module:               course
    prefix_path:          /course
    column:               id
    with_wildcard_routes: true

department:
  class: sfDoctrineRouteCollection
  options:
    model:                Department
    module:               department
    prefix_path:          /department
    column:               id
    with_wildcard_routes: true

email_template:
  class: sfDoctrineRouteCollection
  options:
    model:                EmailTemplate
    module:               email_template
    prefix_path:          /email/template
    column:               id
    with_wildcard_routes: true

academic_period:
  class: sfDoctrineRouteCollection
  options:
    model:                AcademicPeriod
    module:               academic_period
    prefix_path:          /academic/period
    column:               id
    with_wildcard_routes: true

academic_year:
  class: sfDoctrineRouteCollection
  options:
    model:                AcademicYear
    module:               academic_year
    prefix_path:          /academic/year
    column:               id
    with_wildcard_routes: true

program:
  class: sfDoctrineRouteCollection
  options:
    model:                Program
    module:               program
    prefix_path:          /program
    column:               id
    with_wildcard_routes: true

program_level:
  class: sfDoctrineRouteCollection
  options:
    model:                ProgramLevel
    module:               program_level
    prefix_path:          /program/level
    column:               id
    with_wildcard_routes: true

campus:
  class: sfDoctrineRouteCollection
  options:
    model:                Campus
    module:               campus
    prefix_path:          /campus
    column:               id
    with_wildcard_routes: true

assignment:
  class: sfDoctrineRouteCollection
  options:
    model:                Assignment
    module:               assignment
    prefix_path:          /assignment
    column:               id
    with_wildcard_routes: true                                         

student:
  class: sfDoctrineRouteCollection
  options:
    model:                Profile
    module:               student
    prefix_path:          /student
    column:               id
    with_wildcard_routes: true
  
instructor_register_create:
  url:     /instructor/register.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: enroll, action: instructorCreate, sf_format: html }
  requirements: { sf_method: post }
  
instructor_register_new:
  url:     /instructor/register/new.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: enroll, action: instructorRegister, sf_format: html }
  requirements: { sf_method: get }
    
student_inline_update:
  url:     /student/inline/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: student, action: inlineUpdate, sf_format: html }
  requirements: { sf_method: put } 
  
student_inline_edit:
  url:     /student/inline/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: student, action: inlineEdit, sf_format: html }
  requirements: { sf_method: get }

state_province:
  class: sfDoctrineRouteCollection
  options:
    model:                StateProvince
    module:               state_province
    prefix_path:          /state/province
    column:               id
    with_wildcard_routes: true

country:
  class: sfDoctrineRouteCollection
  options:
    model:                Country
    module:               country
    prefix_path:          /country
    column:               id
    with_wildcard_routes: true
    
peer_students:
  url: /peer/students
  param: { module: peer, action: students }
    
peer_instructors:
  url: /peer/instructors
  param: { module: peer, action: instructors }
    
peer_find:
  url: /peer/find
  param: { module: peer, action: find }
    
peer_suggested:
  url: /peer/suggested
  param: { module: peer, action: suggested }
    
peer_invite:
  url: /peer/invite/:invitee_id
  param: { module: peer, action: invite }
    
peer_accept:
  url: /peer/accept/:inviter_id
  param: { module: peer, action: accept }
  
peer_result:
  url: /peer/result
  param: { module: peer, action: result }
    
programmes_student:
  url: /programmes/student
  param: { module: program, action: studentProgrammes } 
  
student_contact_details_edit:
  url:     /student/contact/details/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: StudentContact, type: object }
  param:   { module: student_contact, action: edit, sf_format: html }
  requirements: { sf_method: get }
  
student_contact_details_new:
  url:     /student/contact/details/new.:sf_format
  class:   sfDoctrineRoute
  options: { model: StudentContact, type: object }
  param:   { module: student_contact, action: new, sf_format: html }
  requirements: { sf_method: get }
  
notification_settings_details:
  url: /notification/settings/details
  param: { module: notification_settings, action: profileDetails }
  
account_settings_details:
  url: /account/settings/details
  param: { module: account_settings, action: details }
    
profile_account_settings_update:
  url:     /profile/account/settings/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: profile, action: updateAccountSettings, sf_format: html }
  requirements: { sf_method: put } 
  
profile_account_settings_edit:
  url:     /profile/account/settings/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: profile, action: editAccountSettings, sf_format: html }
  requirements: { sf_method: get }
    
personal_info_update:
  url:     /personal/info/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: personal_info, action: update, sf_format: html }
  requirements: { sf_method: put } 
  
personal_info_edit:
  url:     /personal/info/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: personal_info, action: edit, sf_format: html }
  requirements: { sf_method: get }
  
profile_info_update:
  url:     /profile/info/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: profile_info, action: update, sf_format: html }
  requirements: { sf_method: put } 
  
profile_info_edit:
  url:     /profile/info/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: profile_info, action: edit, sf_format: html }
  requirements: { sf_method: get }  
  
profile_info:
  url:   /profile/info
  param: { module: profile_info, action: index }  
  
profile_photo:
  url:   /profile/photo
  param: { module: personal_info, action: profilePhoto }
  
profile_upload_photo:
  url:   /profile/upload/photo
  param: { module: personal_info, action: uploadPhoto }
  
profile_crop_photo:
  url:   /profile/crop/photo
  param: { module: personal_info, action: cropPhoto }
  
profile_delete_photo:
  url:   /profile/delete/photo
  param: { module: profile, action: deletePhoto } 
  
profile_show_photo:
  url:   /profile/show/photo/:profile_id/:size/:timestamp
  param: { module: profile, action: showPhoto } 
  
profile_qualifications:
  url: /profile/qualifications
  param: { module: achievement, action: qualifications }
  
profile_timeline:
  url: /profile/timeline
  param: { module: profile, action: timeline }
  
profile_peers:
  url: /profile/peers
  param: { module: profile, action: peers }
  
profile_account_settings:
  url: /profile/account/settings
  param: { module: profile, action: accountSettings }
  
profile_contact_details:
  url: /profile/contact/details
  param: { module: profile, action: contactDetails }
  
profile_award_ajax:
  url: /profile/award/ajax
  param: { module: profile_award, action: ajax }
  
profile_qualification_ajax:
  url: /profile/qualification/ajax
  param: { module: profile_qualification, action: ajax }
  
profile_account_settings_ajax:
  url: /profile/account/settings/ajax
  param: { module: account_settings, action: ajax }
  
profile_peer:
  url: /profile/peer
  param: { module: profile, action: index } 
  
peer_profile:
  url: /peer/profile/:peer_id
  param: { module: profile, action: peer }
  
student_programmes:
  url: /student/programmes
  param: { module: student_academic_settings, action: programmes }  
  
instructor_programmes:
  url: /instructor/programmes
  param: { module: instructor_academic_settings, action: programmes }
  
program_choose:
  url: /program/choose
  param: { module: program, action: choose }
    
courses_student:
  url: /courses/student
  param: { module: course, action: studentCourses }
    
courses_instructor:
  url: /courses/instructor
  param: { module: course, action: instructorCourses }  
  
student_courses:
  url: /student/courses
  param: { module: student_academic_settings, action: courses }
  
instructor_courses:
  url: /instructor/courses
  param: { module: instructor_academic_settings, action: courses }
  
course_calendar:
  url: /course/calendar
  param: { module: course, action: calendar }
  
course_choose:
  url: /course/choose
  param: { module: course, action: choose }
 
event_attendees_choose:
  url: /event/attendees/choose
  param: { module: calendar_event_attendee, action: choose }
  
event_attendees:
  url: /event/attendees
  param: { module: calendar_event_attendee, action: attendees }
    
mailing_lists_student:
  url: /mailing/lists/student
  param: { module: mailing_list, action: studentMailingLists }
    
mailing_lists_instructor:
  url: /mailing/lists/instructor
  param: { module: mailing_list, action: instructorMailingLists }  
  
student_mailing_lists:
  url: /student/mailing/lists
  param: { module: student_academic_settings, action: mailingLists } 
  
instructor_mailing_lists:
  url: /instructor/mailing/lists
  param: { module: instructor_academic_settings, action: mailingLists }
  
mailing_list_choose:
  url: /mailing/list/choose
  param: { module: mailing_list, action: choose }
  
mailing_list_choose_student_recepients:
  url: /mailing/list/choose_student_recipients
  param: { module: mailing_list, action: chooseStudentRecipients }
  
mailing_list_choose_instructor_recepients:
  url: /mailing/list/choose/instructor/recipients
  param: { module: mailing_list, action: chooseInstructorRecipients }
  
department_choose:
  url: /department/choose
  param: { module: department, action: choose }
  
contact_instructor_edit:
  url:   /contact/instructor/edit/:fieldset
  param: { module: contact_instructor, action: edit } 
  
instructor_academic_details_create:
  url:     /instructor/academic/details.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: instructor, action: editAcademicDetails, sf_format: html }
  requirements: { sf_method: post } 
  
instructor_academic_details_update:
  url:     /instructor/academic/details/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: instructor, action: updateAcademicDetails, sf_format: html }
  requirements: { sf_method: put }  
  
instructor_academic_details_show:
  url:     /instructor/academic/details/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: instructor, action: showAcademicDetails, sf_format: html }
  requirements: { sf_method: get } 
  
instructor_academic_details_edit:
  url:     /instructor_academic_details/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: instructor, action: editAcademicDetails, sf_format: html }
  requirements: { sf_method: get }
  
instructor_contact_details_create:
  url:     /instructor/contact/details.:sf_format
  class:   sfDoctrineRoute
  options: { model: ContactInstructor, type: object }
  param:   { module: contact_instructor, action: createContactDetails, sf_format: html }
  requirements: { sf_method: post } 
  
instructor_contact_details_update:
  url:     /instructor/contact/details/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: ContactInstructor, type: object }
  param:   { module: contact_instructor, action: updateContactDetails, sf_format: html }
  requirements: { sf_method: put } 
  
instructor_contact_details_edit:
  url:     /instructor/contact/details/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: ContactInstructor, type: object }
  param:   { module: contact_instructor, action: editContactDetails, sf_format: html }
  requirements: { sf_method: get }
  
instructor_contact_details_new:
  url:     /instructor/contact/details/new.:sf_format
  class:   sfDoctrineRoute
  options: { model: ContactInstructor, type: object }
  param:   { module: contact_instructor, action: newContactDetails, sf_format: html }
  requirements: { sf_method: get }
  
peers:
  url: /peers
  param: { module: peer, action: index }
  
peer_home:
  url: /peer/home
  param: { module: peer, action: home }
  
peer_peers:
  url: /peers
  param: { module: peer, action: index }
  
my_document:
  url:   /folder
  param: { module: folder, action: index }

payment_received:
  url:   /payment/received
  param: { module: payment, action: received }

payment_outstanding:
  url:   /payment/outstanding
  param: { module: payment, action: outstanding }
  
folder_section:
  url:   /folder_section/:section
  param: { module: folder, action: section }  
  
gradebook_grades:
  url:   /gradebook
  param: { module: gradebook, action: grades }

folder_browser:
  url:   /folder/browser
  param: { module: folder, action: browser }

folder_descendants:
  url:   /folder/descendants/:parent_id
  param: { module: folder, action: descendants }
  
assignment_detail:
  url:   /assignment/detail
  param: { module: assignment, action: detail }
  
assignment_course:
  url:   /assignment/course
  param: { module: assignment, action: myCourse }
    
assignment_show:
  url:     /assignment/:slug
  class:   sfDoctrineRoute
  options: { model: Assignment, type: object }
  param:   { module: assignment, action: show }
  requirements:
    sf_method: [get]
  
course_extra:
  url:   /course/extra
  param: { module: course_extra, action: index }
  
course_file:
  url:   /course/file
  param: { module: course_file, action: index }
  
course_files:
  url:   /course/files
  param: { module: course_file, action: files }
  
profile_settings:
  url:   /profile/settings
  param: { module: profile, action: settings }
  
achievement:
  url:   /achievement
  param: { module: achievement, action: index }
  
profile_course:
  url:   /achievement
  param: { module: achievement, action: index }
  
remove_post:
  url:   /remove/post/:id
  param: { module: bulletin_board, action: remove }
  
undo_remove_post:
  url:   /undo/remove_post/:id
  param: { module: bulletin_board, action: undoRemove }
  
event:
  url:   /course/announcement
  param: { module: course, action: announcements }  

admissions:
  url:   /application
  param: { module: application, action: index }

my_messages:
  url:   /message/inbox
  param: { module: message_inbox, action: index }
  
my_discussions:
  url:   /my/discussions
  param: { module: discussion, action: my }  

my_courses:
  url:   /my/courses
  param: { module: course, action: my }
  
course_explorer:
  url:   /explore/courses
  param: { module: course, action: explorer }
  
discussion_explorer:
  url:   /explore/discussions
  param: { module: discussion, action: explorer }
  
enroll_course:
  url:   /course/enroll/:course_id
  param: { module: course, action: enroll }
  
archived_courses:
  url:   /archived/courses
  param: { module: course, action: archived }

message:
  url:   /message/inbox
  param: { module: message_inbox, action: index }

message_reply:
  url:   /message/reply
  param: { module: message_inbox, action: reply }
  
message_inbox_tab:
  url:   /message/inbox/tab
  param: { module: message_inbox, action: inboxTab }
  
message_new_tab:
  url:   /message/new/tab
  param: { module: message_inbox, action: newTab }
  
message_auto_email_to:
  url:   /message/email/to
  param: { module: message_inbox, action: autoEmailTo }  
  
message_read_tab:
  url:     /message/read/tab/:id.:sf_format
  class:   sfDoctrineRoute
  options: { model: EmailMessage, type: object }
  param:   { module: message_inbox, action: readTab, sf_format: html }
  requirements: { sf_method: get }
  
message_choose_recipients:
  url: /message/choose/recipients/:type
  param: { module: message_inbox, action: chooseRecipients }
  
message_sent_tab:
  url:   /message/sent/tab
  param: { module: message_sent, action: sentTab }
  
message_trash_tab:
  url:   /message/trash/tab
  param: { module: message_trash, action: trashTab }
  
message_draft_tab:
  url:   /message/draft/tab
  param: { module: message_draft, action: draftTab }
  
message_draft_edit_tab:
  url:     /message/draft/tab/:id/edit.:sf_format
  class:   sfDoctrineRoute
  options: { model: EmailMessage, type: object }
  param:   { module: message_draft, action: editTab, sf_format: html }
  requirements: { sf_method: get }
  
contact_instructor_details:
  url:   /contact/instructor/details
  param: { module: contact_instructor, action: index }
  
student_contact_details:
  url:   /student/contact/details
  param: { module: student_contact, action: new } 
    
settings:
  url:   /country
  param: { module: country, action: index }
  
communication:
  url:   /mailing/list
  param: { module: mailing_list, action: index }
  
messaging_settings:
  url:   /messaging/setting
  param: { module: mailing_list, action: index }
  
mailing_list_recipients:
  url:   /mailing/list/recipients
  param: { module: mailing_list, action: recipients }
  
mailing_list_students:
  url:   /mailing/list/students/:id
  param: { module: mailing_list, action: students }
  
mailing_list_instructors:
  url:   /mailing/list/instructors/:id
  param: { module: mailing_list, action: instructors }
  
my_schedule:
  url:   /my/schedule
  param: { module: calendar, action: mySchedule }
  
calendar_home:
  url:   /calendar/home
  param: { module: calendar, action: index }  
  
calendar_events:
  url:   /calendar/events
  param: { module: calendar_event, action: calendarEvents }
  
course_info:
  url:   /assignment
  param: { module: assignment, action: index }
  
course_home:
  url:   /course/detail
  param: { module: course, action: detail }
    
course_peer:
  url:   /course/peer
  param: { module: course_peer, action: index }
  
course_student:
  url:   /course/student
  param: { module: course_peer, action: students }
  
course_instructor:
  url:   /course/instructor
  param: { module: course_peer, action: instructors }
    
course_show:
  url:     /my/course/:slug
  class:   sfDoctrineRoute
  options: { model: Course, type: object }
  param:   { module: course, action: show }
  requirements:
    sf_method: [get]
  
choose_course:
  url:   /choose/course/:module_name/:object_id
  param: { module: course, action: choose }
  
choose_program:
  url:   /choose/program/:module_name/:object_id
  param: { module: program, action: choose }
  
choose_mailing_list:
  url:   /choose/mailing/list/:module_name/:object_id
  param: { module: mailing_list, action: choose }
  
choose_course_instructors:
  url:   /choose/course/instructors
  param: { module: course_peer, action: chooseInstructors }
  
choose_course_students:
  url:   /choose/course/students
  param: { module: course_peer, action: chooseStudents }
    
academics:
  url:   /student
  param: { module: student, action: index }  
    
documents:
  url:   /folder
  param: { module: folder, action: index }
    
file_system:
  url:   /folder
  param: { module: folder, action: index }
    
course_home:
  url:   /course/info
  param: { module: course, action: info }
    
discussion_show:
  url:     /discussion/:slug
  class:   sfDoctrineRoute
  options: { model: Discussion, type: object }
  param:   { module: discussion, action: show }
  requirements:
    sf_method: [get]
    
course_discussion_show:
  url:     /course/discussion/:slug
  class:   sfDoctrineRoute
  options: { model: Discussion, type: object }
  param:   { module: course_discussion, action: show }
  requirements:
    sf_method: [get]
    
discussion_topic_show:
  url:     /discussion/topic/:slug
  class:   sfDoctrineRoute
  options: { model: DiscussionTopic, type: object }
  param:   { module: discussion_topic, action: show }
  requirements:
    sf_method: [get]
  
discussion_home:
  url: /discussion
  param: { module: discusion, action: index }
  
recent_announcement:
  url:   /announcement/recent
  param: { module: announcement, action: recent }
    
announcement_show:
  url:     /announcement/:slug
  class:   sfDoctrineRoute
  options: { model: Announcement, type: object }
  param:   { module: announcement, action: show }
  requirements:
    sf_method: [get]
    
news_item_show:
  url:     /news/item/:slug
  class:   sfDoctrineRoute
  options: { model: NewsItem, type: object }
  param:   { module: news_item, action: show }
  requirements:
    sf_method: [get] 
    
course_info:
  url:   /course/info
  param: { module: course, action: info }
  
schedule:
  url:   /schedule
  param: { module: schedule, action: index }
  
home:
  url:   /dashboard
  param: { module: dashboard, action: index }
  
academic_personnel:
  url:   /academic/personnel
  param: { module: student, action: index }
  
upload_photo:
  url:     /upload/photo
  param:   { module: personal_info, action: uploadPhoto}
  
create_photo:
  url:     /create/photo
  param:   { module: personal_info, action: createPhoto}
  requirements: { sf_method: post }
  
delete_photo:
  url:     /delete/photo
  param:   { module: personal_info, action: deletePhoto}
  requirements: { sf_method: delete }
  
dashboard:
  url:   /dashboard
  param: { module: dashboard, action: index }
  
my_dashboard:
  url:   /dashboard
  param: { module: dashboard, action: index }
  
message_contact:
  url:   /message
  param: { module: message, action: contact }
  
profile:
  url:   /profile
  param: { module: profile, action: index }
  
my_profile:
  url:   /my/profile
  param: { module: profile, action: index }
  
reporting:
  url:   /reporting
  param: { module: reporting, action: index }
  
academic_settings:
  url:   /academic/settings
  param: { module: course, action: index }
  
location_settings:
  url:   /country
  param: { module: country, action: index }
  
mail_test:
  url:   /mail_test
  param: { module: email_template, action: test }
  
profile_sign_in:
  url:   /user/sign/in
  param: { module: sfGuardAuth, action: logIn }

profile_sign_out:
  url:   /user/sign/out
  param: { module: sfGuardAuth, action: signOut }

profile_forgot_password:
  url:   /user/request/password
  param: { module: ProfileForgotPassword, action: index }
  
profile_forgot_password_update:
  url:     /user/reset/password/:unique_key
  class:   sfDoctrineRoute
  options: { model: ProfileForgotPassword, type: object }
  param:   { module: ProfileForgotPassword, action: change }
  requirements: { sf_method: post }
  
profile_forgot_password_change:
  url:     /user/reset/password/:unique_key
  class:   sfDoctrineRoute
  options: { model: ProfileForgotPassword, type: object }
  param:   { module: ProfileForgotPassword, action: change }
  requirements: { sf_method: get }
  
faqs:
  url:   /faqs
  param: { module: public, action: faq }
  
  
contact_us:
  url:   /contact/us
  param: { module: public, action: contactUs }
  
leadership:
  url:   /our/leadership
  param: { module: public, action: leadership }
  
story:
  url:   /our/story
  param: { module: public, action: story }
  
courses:
  url:   /our/courses
  param: { module: public, action: courses }
  
instructors:
  url:   /our/instructors
  param: { module: public, action: instructors }
  
institutions:
  url:   /our/institutions
  param: { module: public, action: institutions }
  
tos:
  url:   /tos
  param: { module: public, action: tos }
  
privacy_policy:
  url:   /privacy/policy
  param: { module: public, action: privacyPolicy }
    
profile_show:
  url:     /:slug
  class:   sfDoctrineRoute
  options: { model: Profile, type: object }
  param:   { module: profile, action: show }
  requirements:
    sf_method: [get]
  
home:
  url:   /
  param: { module: public, action: index }
  
default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*