get a repo
-----------------
git clone git@github.com:TAKEALOT/tal_frontend.git frontend
git clone git@github.com:TAKEALOT/tal_backend.git backend

get,checkout and track a remote branch
----------------------------
git checkout -b branchname origin/branchname

git fetch upstream
git checkout -b branchname upstream/branchname


create a branch of current point/origin
-----------------
git branch frontend-taarik-example

push branch to remote
-----------------
git push -u origin [branch]

switch to branch
-----------------
git checkout frontend-taarik-example

URL (like svn info)
-----------------
git remote show origin

check branch
-----------------
git branch
git status

committing
-------------
git diff filename
git add filename
git commit -m "message"

after changes commited
-------------
git push

update repo
-------------
git pull

delete branch locally
--------------
git branch -d [branchname]

delete remote branch
--------------
git push origin :[branchname]

restore deleted file
--------------
git checkout filename

pull changes from master into current branch
--------------
git merge master

Stage files
-------------
git add [filelist]

Unstage files
-------------
git reset filename

Commit
-------------
git commit -m 

Dry-run push
-------------
git diff --stat origin/backend-997
git push origin backend-997 --dry-run


1) Process
- get a repo
- create a branch
- checkout to new branch
- status


2) Create and setup of branch

Create a branch
- git branch [new branch name]
Switch to the branch
- git checkout [new branch name]
Create branch at remote
- git push -u origin [new branch name]

3) File Check in

Stage
- git add [filenames]
Commit
- git commit -m "comment"
Push
- git push origin [branch]

On github create a pull request


git checkout -b branchname origin/branchname


FORKING
========================
http://help.github.com/fork-a-repo/

1) Fork the project @ github.com

2) git clone git@github.com:taariksiers/tal_backend.git backend

3) configure remotes
        - cd backend
        - git remote add upstream 
                git remote add upstream git@github.com:TAKEALOT/tal_backend.git
        - git fetch upstream


Adding another remote
---------------------
git remote add Stii git@github.com:Stii/tal_backend.git


                
BRANCHING
========================

1) git pull upstream master

2) then do normal branch creation and push
                

REBASING
========================

+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| It is considered bad practice to rebase commits which you have ALREADY PUSHED to a remote repo. Doing so may invoke the wrath of the git gods... you have been warned. |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+



Local Master gets ahead of remote
----------------------------------
git push origin master


Checkout another remote branch
----------------------------------
git remote add Stii git@github.com:Stii/tal_backend.git
git fetch Stii
git co -b deptstats Stii/deptstats



git log colour
-----------------------------------
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --"
