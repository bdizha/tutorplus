<?php

/**
 * AttendanceTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AttendanceTable extends Doctrine_Table
{

    /**
     * Returns an instance of this class.
     *
     * @return object AttendanceTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Attendance');
    }

    public function createAttendanceDatesByCourse($course = null)
    {
        foreach ($course->getCourseMeetingTimes() as $course_meeting_time)
        {
            $course_start_day = $course->getDateTimeObject('start_date')->format('w');
            $days_difference = $course_meeting_time->getDay() - $course_start_day;

            // calculate the difference between the two days
            $calculated_date = strtotime($course->get("start_date") . " $days_difference days");
            $week = 0;

            // check to see if the calculated day is still in the range
            while ($calculated_date >= strtotime($course->get("start_date")) &&
            $calculated_date <= strtotime($course->get("end_date")))
            {
                $days_difference += $week * 7;

                $calculated_date = strtotime($course->get("start_date") . " $days_difference days");

                if ($this->exists($calculated_date))
                {
                    if ($calculated_date >= strtotime($course->get("start_date")) &&
                        $calculated_date <= strtotime($course->get("end_date")))
                    {
                        $attendance = new Attendance();
                        $attendance->setCourseId($course->get("id"));
                        $attendance->setDate(date("Y-m-d H:i:s", $calculated_date));
                        $attendance->setCourseMeetingTimeId($course_meeting_time->get("id"));
                        $attendance->save();
                    }
                    else
                    {
                        continue;
                    }
                }
                $week++;
            }
        }
    }

    public function findByCourse($course = null)
    {
        $q = Doctrine_Query::create()
            ->from('Attendance a')
            ->addWhere("a.course_id = ?", $course->get("id"));

        return $q->execute();
    }

    public function exists($calculated_date = null)
    {
        return!is_object(AttendanceTable::getInstance()->findOneBy("date", date("Y-m-d H:i:s", $calculated_date)));
    }

    public function retrieveByStudentAndAttendance($student_id = null, $attendance_id = null)
    {
        $query = $this->createQuery('sgi')
            ->innerJoin('sgi.GradebookItem gi')
            ->where('sgi.student_id = ?', $student_id)
            ->addWhere('gi.gradebook_id = ?', $gradebook_id);

        return $query->execute();
    }

}