<?php

/**
 * ProfileTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProfileTable extends Doctrine_Table {

  /**
   * Returns an instance of this class.
   *
   * @return object ProfileTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('Profile');
  }

  public function findByFields($exp, $excludedIds = array(), $limit = 100) {
    if ($exp == "%") {
      return $users = $this->createQuery('p')
          ->whereNotIn("p.id", $excludedIds)
          ->orderby("p.first_name, p.last_name ASC")
          ->limit($limit)
          ->execute();
    } else {
      return $this->createQuery('p')
              ->where("(p.first_name LIKE '%{$exp}%' OR p.last_name LIKE '%{$exp}%' OR p.email LIKE '%{$exp}%')")
              ->whereNotIn("p.id", $excludedIds)
              ->orderby("p.first_name, p.last_name ASC")
              ->limit($limit)
              ->execute();
    }
  }

  public function findBySearch($exp, $previousEmailAddresses = array(), $limit = 100) {
    return $this->createQuery('p')
            ->where("(p.first_name LIKE '%{$exp}%' OR p.last_name LIKE '%{$exp}%' OR p.email LIKE '%{$exp}%')")
            ->whereNotIn("p.email", $previousEmailAddresses)
            ->orderby("p.first_name, p.last_name ASC")
            ->limit($limit)
            ->execute();
  }

  public function retrieveByIds($ids = array()) {
    if (count($ids) == 0) {
      return array();
    }
    $query = $this->createQuery('p')
        ->whereIn('p.id', $ids);

    return $query->execute();
  }

  public function retrieveProfileIdsByDiscussionId($discussionId = null, $isRemoved = 0) {
    $query = $this->createQuery('p')
        ->select('p.id')
        ->innerJoin('p.DiscussionPeer dp')
        ->where('dp.discussion_id = ?', $discussionId)
        ->addWhere('dp.is_removed = ?', $isRemoved);

    return $query->execute()->getPrimaryKeys();
  }

  public function retrieveByEmails($emails = "") {
    $emails = explode(";", $emails);
    if (count($emails) == 0) {
      return array();
    }
    $query = $this->createQuery('p')
        ->whereIn('p.email', $emails);

    return $query->execute();
  }

  /**
   * Retrieves a Profile object by email and is_active flag.
   *
   * @param  string  $email    The username
   * @param  boolean $isActive The user's status
   *
   * @return Profile
   */
  public function retrieveByEmail($email, $isActive = true) {
    $query = Doctrine_Core::getTable('Profile')->createQuery('p')
        ->where('p.email = ?', $username)
        ->addWhere('p.is_active = ?', $isActive);

    return $query->fetchOne();
  }

}